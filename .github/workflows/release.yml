name: Release Workflow

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.2.3)'
        required: true
        type: string
      prerelease:
        description: 'Is this a prerelease?'
        required: false
        type: boolean
        default: false

env:
  DOCKER_REGISTRY: ghcr.io
  DOCKER_BACKEND_IMAGE: ghcr.io/${{ github.repository }}/backend
  DOCKER_FRONTEND_IMAGE: ghcr.io/${{ github.repository }}/frontend
  RELEASE_VERSION: ${{ github.event.inputs.version || github.ref_name }}

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'src/web/package-lock.json'

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: 'mbstring, xml, ctype, iconv, intl, pdo_mysql, redis'
          coverage: 'none'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract version components
        id: semver
        run: |
          echo "version=${RELEASE_VERSION#v}" >> $GITHUB_OUTPUT
          echo "major=$(echo ${RELEASE_VERSION#v} | cut -d. -f1)" >> $GITHUB_OUTPUT
          echo "minor=$(echo ${RELEASE_VERSION#v} | cut -d. -f2)" >> $GITHUB_OUTPUT
          echo "patch=$(echo ${RELEASE_VERSION#v} | cut -d. -f3 | cut -d- -f1)" >> $GITHUB_OUTPUT

      - name: Generate Release Notes
        uses: release-drafter/release-drafter@v5
        with:
          version: ${{ env.RELEASE_VERSION }}
          prerelease: ${{ github.event.inputs.prerelease }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push backend image
        uses: docker/build-push-action@v4
        with:
          context: ./src/backend
          file: ./src/backend/docker/Dockerfile
          push: true
          tags: ${{ env.DOCKER_BACKEND_IMAGE }}:${{ env.RELEASE_VERSION }},${{ env.DOCKER_BACKEND_IMAGE }}:${{ steps.semver.outputs.major }}.${{ steps.semver.outputs.minor }},${{ env.DOCKER_BACKEND_IMAGE }}:latest
          cache-from: type=registry,ref=${{ env.DOCKER_BACKEND_IMAGE }}:buildcache
          cache-to: type=registry,ref=${{ env.DOCKER_BACKEND_IMAGE }}:buildcache,mode=max

      - name: Build and push frontend image
        uses: docker/build-push-action@v4
        with:
          context: ./src/web
          file: ./src/web/Dockerfile
          push: true
          tags: ${{ env.DOCKER_FRONTEND_IMAGE }}:${{ env.RELEASE_VERSION }},${{ env.DOCKER_FRONTEND_IMAGE }}:${{ steps.semver.outputs.major }}.${{ steps.semver.outputs.minor }},${{ env.DOCKER_FRONTEND_IMAGE }}:latest
          cache-from: type=registry,ref=${{ env.DOCKER_FRONTEND_IMAGE }}:buildcache
          cache-to: type=registry,ref=${{ env.DOCKER_FRONTEND_IMAGE }}:buildcache,mode=max

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.RELEASE_VERSION }}
          release_name: Release ${{ env.RELEASE_VERSION }}
          body: ${{ steps.release-notes.outputs.content }}
          draft: false
          prerelease: ${{ github.event.inputs.prerelease }}