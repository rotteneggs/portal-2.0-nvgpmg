<?php

namespace App\Http\Resources;

use Illuminate\Http\Resources\Json\JsonResource;

class ApplicationResource extends JsonResource
{
    /**
     * Transform the resource into an array.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return array|\Illuminate\Contracts\Support\Arrayable|\JsonSerializable
     */
    public function toArray($request)
    {
        return [
            'id' => $this->id,
            'user_id' => $this->user_id,
            'application_type' => $this->application_type,
            'academic_term' => $this->academic_term,
            'academic_year' => $this->academic_year,
            'current_status_id' => $this->current_status_id,
            'application_data' => $this->application_data,
            'is_submitted' => $this->is_submitted,
            'submitted_at' => $this->submitted_at,
            'created_at' => $this->created_at,
            'updated_at' => $this->updated_at,
            'current_status' => $this->when($this->relationLoaded('currentStatus'), function () {
                return [
                    'id' => $this->currentStatus->id,
                    'application_id' => $this->id,
                    'workflow_stage_id' => $this->currentStatus->workflow_stage_id,
                    'status' => $this->currentStatus->status,
                    'notes' => $this->currentStatus->notes,
                    'created_by_user_id' => $this->currentStatus->created_by_user_id,
                    'created_at' => $this->currentStatus->created_at,
                ];
            }),
            'statuses' => $this->when($this->relationLoaded('statuses'), function () {
                return $this->statuses->map(function ($status) {
                    return [
                        'id' => $status->id,
                        'application_id' => $this->id,
                        'workflow_stage_id' => $status->workflow_stage_id,
                        'status' => $status->status,
                        'notes' => $status->notes,
                        'created_by_user_id' => $status->created_by_user_id,
                        'created_at' => $status->created_at,
                    ];
                });
            }),
            'documents' => $this->when($this->relationLoaded('documents'), function () {
                return $this->documents->map(function ($document) {
                    return [
                        'id' => $document->id,
                        'document_type' => $document->document_type,
                        'file_name' => $document->file_name,
                        'is_verified' => $document->is_verified,
                        'verified_at' => $document->verified_at,
                    ];
                });
            }),
            'completion_percentage' => $this->completion_percentage,
        ];
    }
}